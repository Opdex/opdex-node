name: Opdex-Node
trigger:
- main

resources:
- repo: self

pool:
  vmImage: ubuntu-latest

stages:
- stage: CI
  displayName: 'Continuous Integration'
  jobs:
  - job: Build
    displayName: Build and Publish

    variables:
      SOLUTION: 'OpdexFullNode.sln'
      BUILD_CONFIGURATION: 'Release'
      ARTIFACT_NAME: 'opdex-node'

    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: $(SOLUTION)
      displayName: Restore

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: $(SOLUTION)
        arguments: '--configuration $(BUILD_CONFIGURATION) --no-restore'
      displayName: 'Build'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: $(SOLUTION)
        publishWebProjects: True
        arguments: '--configuration $(BUILD_CONFIGURATION) --no-build --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: False
      displayName: Publish

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: '$(ARTIFACT_NAME)'
      displayName: Share

  - job: Push
    displayName: Docker build and push

    variables:
      IMAGE_REPOSITORY: 'opdex-node'
      DOCKERFILE_PATH: '$(Build.SourcesDirectory)/src/Opdex.Cirrus/Dockerfile'
      TAG: '$(Build.BuildId)'

    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: 'acradam'
        repository: '$(IMAGE_REPOSITORY)'
        command: 'buildAndPush'
        Dockerfile: 'DOCKERFILE_PATH'
        tags: '$(TAG)'
